name: Deploy NodeJS Project APP to EC2

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

  APP_DOCKER_IMAGE_NAME: jiooh/restful_app
  AWS_REGION: ap-northeast-2
  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}

  K8S_DEPLOYMENT_NAME: node-deployment
  K8S_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./arduino
          file: ./arduino/Dockerfile
          push: true
          tags: ${{ env.APP_DOCKER_IMAGE_NAME }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "--- Pulling Latest App Image ---"
            docker pull ${{ env.APP_DOCKER_IMAGE_NAME }}:latest

            echo "--- Stopping and Removing Old App Container ---"
            docker stop restful_app || true
            docker rm restful_app || true

            echo "--- Stopping and Removing Old MongoDB Container ---"
            docker stop mongo-container || true
            docker rm mongo-container || true

            echo "--- Running MongoDB Container ---"
            docker run -d --restart always \
              --name mongo-container \
              -p 27017:27017 \
              -v mongodb_data:/data/db \
              mongo:6.0 \
              --bind_ip_all

            echo "--- Running New App Container ---"
            docker run -d --restart always \
              --name restful_app \
              -p 3000:3000 \
              -e MONGO_URI=mongodb://mongo-container:27017/sensordb \
              ${{ env.APP_DOCKER_IMAGE_NAME }}:latest

            echo "--- Cleaning up unused Docker images ---"
            docker system prune -f
      - name: Deploy to Kubernetes via EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "--- Pulling latest image in Kubernetes Deployment ---"

            # 1. 이미지 태그  업데이트 (선택)
            # 또는 deployment.yaml에 imagePullPolicy: Always 설정

            # 2. apply 배포파일
            kubectl apply -f /work/project2/k8s/mongo-deployment.yaml
            kubectl apply -f /work/project2/k8s/node-deployment.yaml
            kubectl apply -f /work/project2/k8s/mongo-service.yaml
            kubectl apply -f /work/project2/k8s/node-service.yaml

            # 3. rollout 재시작으로 새 이미지 적용
            kubectl rollout restart deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}

            # 4. 상태 확인
            kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}